{
    "concepts": [
        {
            "title" : "Programming",
            "description" : "It is a remarkable fact that every computer, from a Turing Machine to a Cray to an iPod is theoretically capable of performing the exact same calculations as every other computer, limited only by memory capacity and time."
        },
        {
            "title" : "Instructions",
            "description" : "Computer processors have much in common with cells. Both computers and cells manage to complete incredibly complex tasks with no intelligence whatsoever, they simply follow deterministic paths. Writing interesting programs in terms of the deterministic tasks that computers can execute is a relic of the 50s."
        },
        {
            "title" : "Functions",
            "description" : "Functions allow us to compose simple instructions into more complex abstractions. This serves two purposes. First, it allows the program to be thought of as larger chunks. Second, it facilitates reuse of code both within, and between, projects."
        },
        {
            "title" : "For Loops",
            "description" : "Next we're going to talk about a programming construct that behaves like a washing machine: you jump in, get spun around some number of times, and you get spat back out again. The washing machine also has a timer, that tells it how many times to spin."
        },
        {
            "title" : "Washing Machine Timer",
            "description" : "In Python, the timer for the washing machine is supplied by a list. The washing machine will go around once for each item that's in the list. This process is called iteration. Iteration means to move through a list, performing some action using each item of the list."
        },
        {
            "title" : "For Loop Details",
            "description" : "Let's check out the Python syntax for iteration. The first thing we need is a list to iterate over. If we don't have one, the easiest way to make one is using the range command. The second thing we need is a variable to hold each item of the list in turn. If there's no more logical variable name, then `item` is often a good choice. Now we can write a block whatever instructions we like. Python will spin around and around the block, setting `item` to each value in `iteration_list` in turn. When it's all done, execution gets spat out of the washing machine, and continues on through the program."
        },
        {
            "title" : "Declarative Languages",
            "description" : "HTML is declarative, which means you're not giving the computer any instructions, but rather you're describing what you want the computer to produce, and some other system will take care of creating what you specify. Declarative languages are generally of narrow scope, and are interpreted by some supporting system. In this case, the browser renders the HTML."
        },
        {
            "title" : "Lorem Gibson",
            "description" : "Crypto-sensory urban hotdog futurity construct convenience store camera advert industrial grade assassin alcohol drugs market. Uplink silent A.I. monofilament dead youtube tattoo-ware Tokyo vehicle fetishism tiger-team savant boy. Space urban skyscraper ablative urban Kowloon 3D-printed physical Chiba denim woman sunglasses claymore mine wonton soup."
        }
    ]
}
